// ==========================================================================
// Project:  Ember FormBuilder
// Copyright: Â©2012 Luan Santos. and contributors.
// License:   Licensed under MIT license (see license.js)
// ==========================================================================


(function(a){((function(){Ember.FormBuilder=Ember.Namespace.create({wrapperTag:"div",wrapperClass:"control-group",inputWrapperTag:"div",inputWrapperClass:"controls",labelClass:"control-label",helpTag:"p",helpClass:"help-block",errorTag:"span",errorClass:"help-inline"})})).call(this)})({}),function(a){((function(){Ember.Handlebars.registerHelper("addAssociation",function(a,b){return b.hash.contentBinding="bindingContext.object."+a,b.hash.preserveContext=!1,Ember.Handlebars.helpers.view.call(this,"Ember.FormBuilder.AddAssociation",b)})})).call(this)}({}),function(a){((function(){Ember.Handlebars.registerHelper("fieldsFor",function(a,b){return b.hash.contentBinding="bindingContext.object."+a,b.hash.preserveContext=!1,Ember.Handlebars.helpers.collection.call(this,"Ember.FormBuilder.NestedFields",b)})})).call(this)}({}),function(a){((function(){Ember.Handlebars.registerHelper("formFor",function(a,b){return b.hash.contentBinding=a,b.hash.preserveContext=!0,Ember.Handlebars.helpers.view.call(this,"Ember.FormBuilder.Form",b)})})).call(this)}({}),function(a){((function(){Ember.Handlebars.registerHelper("input",function(a,b){var c;return b.hash.label||(c=Ember.String.underscore(a).split("_"),c=c.map(function(a){return a.charAt(0).toUpperCase()+a.substring(1)}),b.hash.label=c.join(" ")),b.hash.valueBinding="content."+a,b.hash.preserveContext=!0,Ember.Handlebars.helpers.view.call(this,"Ember.FormBuilder.Input",b)})})).call(this)}({}),function(a){((function(){Ember.Handlebars.registerHelper("removeAssociation",function(a,b){return b.hash.contentBinding="content",b.hash.collectionBinding="bindingContext.content."+a,b.hash.preserveContext=!0,Ember.Handlebars.helpers.view.call(this,"Ember.FormBuilder.RemoveAssociation",b)})})).call(this)}({}),function(a){((function(){Ember.FormBuilder.Info=Ember.View.extend({classNameBindings:["classes"],template:Ember.Handlebars.compile("{{text}}")})})).call(this)}({}),function(a){((function(){Ember.FormBuilder.AddAssociation=Ember.View.extend({tagName:"a",classNameBindings:["classes"],template:Ember.Handlebars.compile("{{text}}"),click:function(){var a,b;return console.log("oi"),b=this.get("content"),a=Ember.getPath(this.get("objectClass")),b.pushObject(a.create())}})})).call(this)}({}),function(a){((function(){Ember.FormBuilder.Error=Ember.FormBuilder.Info.extend({init:function(){return this._super(),this.set("classes",this.get("classes")||Ember.FormBuilder.errorClass),this.set("tagName",this.get("tagName")||Ember.FormBuilder.errorTag)}})})).call(this)}({}),function(a){((function(){Ember.FormBuilder.Form=Ember.View.extend({tagName:"form",classNameBindings:["classes"]})})).call(this)}({}),function(a){((function(){Ember.FormBuilder.Help=Ember.FormBuilder.Info.extend({init:function(){return this._super(),this.set("classes",this.get("classes")||Ember.FormBuilder.helpClass),this.set("tagName",this.get("tagName")||Ember.FormBuilder.helpTag)}})})).call(this)}({}),function(a){((function(){Ember.FormBuilder.Input=Ember.View.extend({tagName:Ember.FormBuilder.wrapperTag,classNameBindings:["wrapperClass","infoClass"],inputClass:"",label:"",init:function(){return this._super(),this.set("inputView",this.get("inputView")||"Ember.TextField"),this.set("inputWrapperTag",this.get("inputWrapperTag")||Ember.FormBuilder.inputWrapperTag),this.set("inputWrapperClass",this.get("inputWrapperClass")||Ember.FormBuilder.inputWrapperClass),this.set("wrapperClass",this.get("wrapperClass")||Ember.FormBuilder.wrapperClass),this.get("showLabel")===void 0&&this.set("showLabel",!0),this.set("infoClass",this.get("infoClass")||""),Ember.empty(this.get("value"))&&this.set("value",""),this.set("template",Ember.Handlebars.compile('      {{#if showLabel}}        <label class="string required control-label" for="'+Ember.guidFor(this)+'input">          {{label}}        </label>      {{/if}}      {{#view Ember.View tagName=inputWrapperTag class=inputWrapperClass contentBinding="this"}}        {{view '+this.inputView+' id="'+Ember.guidFor(this)+'input" class=content.inputClass valueBinding="content.value"}}        {{#if content.error}}          {{view Ember.FormBuilder.Error text=content.error}}        {{/if}}        {{#if content.hint}}          {{view Ember.FormBuilder.Help text=content.hint}}        {{/if}}      {{/view}}    '))},errorChanged:Ember.observer(function(){if(this.get("error")!==void 0)return this.set("infoClass","error")},"error")})})).call(this)}({}),function(a){((function(){Ember.FormBuilder.NestedField=Ember.View.extend(Ember.Metamorph,{tagName:"div",classNameBindings:["classes",":nested-fields"]}),Ember.FormBuilder.NestedFields=Ember.CollectionView.extend(Ember.Metamorph,{itemViewClass:Ember.FormBuilder.NestedField})})).call(this)}({}),function(a){((function(){Ember.FormBuilder.RemoveAssociation=Ember.View.extend({tagName:"a",classNameBindings:["classes"],template:Ember.Handlebars.compile("{{text}}"),click:function(){var a,b;return a=this.get("collection"),b=this.get("content"),a.removeObject(b)}})})).call(this)}({}),function(a){((function(){})).call(this)}({})
